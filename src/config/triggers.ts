import { Trigger } from "../types/Trigger";

export const triggers: Trigger[] = [
  {
    cmd: "help",
    description: "Lists commands",
    aliases: ["helpme", "commands", "cmds"],
    keys: [
      "create a list of commands",
      "get a list of commands",
      "where is the list of commands",
      "make a list of commands",
    ],
    lines: [
      "**Available commands**",
      "`!pdir` gives the panel directory",
      "`!wdir` gives wings/daemon directory",
      "`!logs` shows how to retrieve logs for the panel and daemon",
      "`!install` gives the command to use the installation script",
      "`!check` gives a useful command to check for panel errors",
      "`!ncheck` gives a command to check nginx configuration, gives nginx configuration directory",
      "`!nstart`, `!nrestart`, `!nstop`, and `!nstatus` all give instructions on how to perform those respective actions to nginx using systemctl",
      "`!wstart`, `!wrestart`, `!wstop`, and `!wstatus` perform similar functions as above except for wings",
      "`!config` provides a link to the official instructions on how to manually configure the daemon",
      "`!storage` provides the location in which server files are stored",
      "`!muser` gives instructions on how to create a new user for the panel",
      "`!eggs` gives a link to parkervcp's collection of public eggs",
      "`!arcio` gives instructions on how to use the arc.io CDN on your website.",
      "`!sslfail` gives instrucions to get certificates after an error.",
      "`!binderror` gives general troubleshooting steps for an error encountered while trying to bind to an IP and port.",
      "`!versions` gives information on the versions the script supports.",
      "`!logsmissing` gives information on how to retrieve the logs manually.",
      "`!update` gives instructions on how to update the panel or wings to the latest version.",
      "",
      "These commands are paired with a list of keywords which trigger messages.",
      "Find more on the [GitHub](https://github.com/pterodactyl-installer/pis-bot/)",
    ],
  },
  {
    cmd: "pdir",
    description: "Gives the panel directory",
    aliases: ["pdir", "paneldir"],
    keys: [
      "where is the panel directory",
      "can somebody tell me the panel directory",
    ],
    lines: ["Default panel directory is `/var/www/pterodactyl/`"],
  },
  {
    cmd: "wdir",
    description: "Gives the wings directory",
    aliases: ["wdir", "wingsdir", "ddir", "daemondir"],
    keys: [
      "where is the daemon directory",
      "can somebody tell me the daemon directory",
      "where is the wings directory",
      "can somebody tell me the wings directory",
    ],
    lines: [
      "The wings files are stored in:",
      "configs in `/etc/pterodactyl/`",
      "executable in `/usr/local/bin/`",
    ],
  },
  {
    cmd: "logs",
    description:
      "Gives instructions on how to retrieve logs for the panel and daemon",
    aliases: ["log", "o,l.gs", "lokgs", "logas"],
    keys: [
      "how to get script logs",
      "how to get the logs",
      "how do I get the logs",
      "where to find the logs",
      "find daemon logs",
      "find logs",
      "find panel logs",
      "find the daemon logs",
      "find the panel logs",
      "find any logs",
      "get the logs",
    ],
    lines: [
      "Script logs: ```cat /var/log/pterodactyl-installer.log | nc termbin.com 9999```",
      "Panel logs: ```tail -n 100 /var/www/pterodactyl/storage/logs/laravel-$(date +%F).log | nc bin.ptdl.co 99```",
      "Daemon logs: ```sudo wings diagnostics --debug```",
    ],
  },
  {
    cmd: "install",
    description: "Gives the command to use the installation script",
    aliases: ["inst", "instal"],
    keys: [
      "how to install the script",
      "what is the command to install the script",
      "how do I install the daemon",
      "how do I install the panel",
      "how do I install the script",
      "how do I install the panel",
      "how to install the panel",
      "how do I install the panel",
    ],
    lines: [
      "Install with:",
      "```bash\nbash <(curl -s https://pterodactyl-installer.se)```",
      "If that fails, it is possible to do the same thing by running this:",
      "```bash\nwget https://pterodactyl-installer.se/i.sh\nbash i.sh```",
    ],
  },
  {
    cmd: "check",
    description: "Gives a useful command to check for panel errors",
    aliases: ["errorcheck", "checkerror"],
    keys: ["how do I check for panel errors", "check panel errors"],
    lines: [
      "This command can be useful to check for errors on the panel:",
      "(if everything is alright it doesn't give any output, to quit `ctrl + c`)",
      "`/usr/bin/php /var/www/pterodactyl/artisan queue:work --queue=high,standard,low --sleep=3 --tries=3`",
    ],
  },
  {
    cmd: "nstart",
    description: "Gives instructions on how to start nginx",
    aliases: ["ngstart", "nginxstart"],
    keys: ["how do I start nginx", "how to start nginx"],
    lines: ["Start nginx with `systemctl start nginx`"],
  },
  {
    cmd: "nrestart",
    description: "Gives instructions on how to restart nginx",
    aliases: ["nginxrestart", "ngrestart"],
    keys: [
      "how do I restart nginx",
      "restart nginx how",
      "restart nginx? how do I do that?",
      "restarting nginx is impossible",
    ],
    lines: ["Restart nginx with `systemctl restart nginx`"],
  },
  {
    cmd: "nstop",
    description: "Gives instructions on how to stop nginx",
    aliases: ["nginxstop", "ngstop"],
    keys: ["how do I stop nginx", "stop nginx how"],
    lines: ["Stop nginx with `systemctl stop nginx`"],
  },
  {
    cmd: "nstatus",
    description: "Gives instructions on how to check nginx status",
    aliases: ["nginxstatus", "ngstatus"],
    keys: ["how do I check nginx logs", "how do I check the status of nginx"],
    lines: ["Check status and logs of nginx with `systemctl status nginx`"],
  },
  {
    cmd: "ncheck",
    description: "Gives instructions on how to check nginx errors",
    aliases: ["ngcheck", "nginxcheck"],
    keys: [
      "how do I check nginx configuration",
      "how to check nginx configuration",
    ],
    lines: [
      "To check nginx configuration use ```nginx -t```",
      "Nginx configuration is stored in:",
      "Ubuntu/Debian: `/etc/nginx/sites-available/pterodactyl.conf`",
      "CentOS: `/etc/nginx/conf.d/pterodactyl.conf`",
    ],
  },
  {
    cmd: "wstart",
    description: "Gives instructions on how to start the daemon",
    aliases: ["wistart", "wingstart", "wingsstart"],
    keys: [
      "how do I start wings",
      "how do I start wings",
      "start the daemon",
      "how to start deamon",
      "how to start daemon",
      "how to start wings",
      "systemctl start daemon",
    ],
    lines: [
      "Start the daemon after configuration with `systemctl start wings`",
    ],
  },
  {
    cmd: "wrestart",
    description: "Gives instructions on how to restart the daemon",
    aliases: ["wirestart", "wingsrestart", "wgrestart"],
    keys: [
      "how to restart wings",
      "restart wings how",
      "restart the daemon",
      "systemctl restart daemon",
    ],
    lines: ["Restart the daemon with `systemctl restart wings`"],
  },
  {
    cmd: "wstop",
    description: "Gives instructions on how to stop the daemon",
    aliases: ["wgstop", "wingsstop", "wingstop"],
    keys: [
      "how do I stop wings",
      "stop the daemon",
      "how do I stop the daemon",
      "how to stop daemon",
      "how to stop wings",
      "systemctl stop daemon",
    ],
    lines: ["Stop the daemon with `systemctl stop wings`"],
  },
  {
    cmd: "wstatus",
    description: "Gives instructions on how to check daemon status",
    aliases: ["wgstatus", "wingstatus", "wingsstatus"],
    keys: [
      "check daemon status",
      "check the status of the daemon",
      "how to check wings status",
      "how to cehck wings status",
      "how do I know if the daemon is installed",
      "systemctl status daemon",
    ],
    lines: [
      "Check status and logs of the daemon with `systemctl status wings`",
    ],
  },
  {
    cmd: "config",
    description: "Gives instructions on how to configure the daemon",
    keys: [
      "config location",
      "how to configure the daemon",
      "No config file located for Daemon",
      "Please create a configuration file",
      "Cannot find module 'srv/daemon/config/'",
    ],
    lines: [
      "Here is the [guide](https://pterodactyl.io/wings/1.0/installing.html#configure) for configuring your wings",
    ],
  },
  {
    cmd: "redis",
    description: "Gives instructions on how to fix redis error",
    aliases: ["rediswrong"],
    keys: [
      "dependency problems prevent configuration of redis:",
      "Package redis-server is not configured yet.",
      "Errors were encountered while processing: redis-server",
    ],
    lines: [
      "Most likely your server doesn't support IPV6.",
      'To fix run ```sed -i "s/bind .*/bind 127.0.0.1/g" /etc/redis/redis.conf``` and run the script again.',
    ],
  },
  {
    cmd: "sudo",
    description:
      "Gives instructions on how to fix /dev/fd/63: No such file or directory",
    aliases: ["dev/fd"],
    keys: ["/dev/fd/63: No such file or directory"],
    lines: [
      "Log in as root or use `sudo su` before running the script.",
      "** *Do not use `sudo` in front of the script!* **",
    ],
  },
  {
    cmd: "ports",
    description: "Gives the ports required to be opened",
    keys: ["What ports do i need to forward"],
    lines: [
      "The ports required to be opened are:",
      "HTTP 80",
      "HTTPS (optional only use when using SSL) 443",
      "SFTP 2022",
      "WINGS 8080",
    ],
  },
  {
    cmd: "storage",
    description: "Gives the location of where server files are stored",
    aliases: ["strg", "serverfiles"],
    keys: ["where are the server files stored", "server file storage location"],
    lines: [
      "The server files on the daemon are stored: ```/var/lib/pterodactyl/volumes/```",
    ],
  },
  {
    cmd: "muser",
    description: "Gives instructions on how to create a user",
    aliases: ["createuser", "makeuser"],
    keys: ["how do I make a user", "how to make a user"],
    lines: [
      "Create a new panel user by running: ```cd /var/www/pterodactyl/\nphp artisan p:user:make```",
    ],
  },
  {
    cmd: "error500",
    notSlashCmd: true,
    keys: [
      "error 500",
      "500 error",
      "500 http",
      "500 problem",
      "http 500",
      "code 500",
      "something went wrong",
    ],
    lines: [
      "Error 500 can mean a lot of things. Run the command below to get the error logs from the panel, it may help in diagnosing the issues.\n```tail -n 100 /var/www/pterodactyl/storage/logs/laravel-$(date +%F).log | nc bin.ptdl.co 99```",
    ],
  },
  {
    cmd: "eggs",
    description: "Gives a repository of pterodactyl eggs",
    aliases: ["egg"],
    keys: [
      "where to get the eggs",
      "i need to install eggs",
      "help me please i have no idea how to install eggs",
      "i'll give you money if you install eggs for me",
    ],
    lines: [
      "parkervcp's collection of public eggs can be found here: [EGGS](https://github.com/parkervcp/eggs)",
    ],
  },
  {
    cmd: "arcio",
    description: "Gives instructions of how to install arc.io",
    aliases: ["arc.io", "ark.io", "arkio", "io.arc"],
    keys: ["how to set up arc", "set up arc.io how", "arc.io need help"],
    lines: [
      "To set up arc.io on the Pterodactyl Panel, first follow the official instructions on the arc.io website.",
      "When you get to the section where it wants you to add their widget to your site, copy the `<script>` tag.",
      'The copied text should look like this: `<script async src="https://arc.io/widget.js#xxxxxxxx"></script>`',
      "In your server, run `cd /var/www/pterodactyl/resources/views/templates/`.",
      "Edit the file `wrapper.blade.php`. Add the `<script>` tag to your `<head>` section.",
      "You should be done! Please ping the helpers if this does not work; the method may need to be fixed or updated.",
    ],
  },
  {
    cmd: "daemonException",
    notSlashCmd: true,
    keys: ["exception while attempting to communicate with the daemon"],
    lines: [
      "Your panel cannot connect to your daemon. Check: Is it online? (`systemctl status wings`) Is your firewall blocking the connections? (If so, run `ufw allow 8080` and `ufw allow 2022`).",
    ],
  },
  {
    cmd: "binderror",
    notSlashCmd: true,
    keys: ["driver failed programming external connectivity"],
    lines: [
      "Your daemon failed to bind to the IP and port needed for the service. If this is an error you get while trying to start a Pterodactyl server, the allocations are probably misconfigured. Unless you're using a special setup, bind to `0.0.0.0`, not your external IP address. If that doesn't work, check if your port is in use with `netstat -tulpn | grep <port>`.",
    ],
  },
  {
    cmd: "sslfail",
    description: "Gives instructions on how to fix SSL failure",
    aliases: ["letsencrypt", "sslerror"],
    keys: [
      "ssl failed",
      "letsencrypt failed",
      "The process of obtaining a Let's Encrypt certificate failed!",
      "certificate failed",
    ],
    lines: [
      "Your certificates weren't generated.",
      "You need to make sure ports 80, 443 are open.",
      "Also make sure your domains DNS settings are correct.",
      "To try obtaining certificates again use:",
      "```certbot certonly --standalone -d panel.example.com```",
    ],
  },
  {
    cmd: "nologs",
    aliases: ["logsmissing"],
    description: "Gives instructions on how to find earlier logs",
    keys: [
      "for reading: No such file or directory",
      "panel logs I get No such file or directory",
    ],
    lines: [
      "The logs for that day don't exist. Instead, look in the log directory itself.",
      "```",
      "cd /var/www/pterodactyl/storage/logs/",
      "```",
    ],
  },
  {
    cmd: "dockersocket",
    notSlashCmd: true,
    keys: ["locate a suitable socket at path specified in configuration"],
    lines: [
      "Docker might not be running. Run `systemctl status docker` to check its status",
    ],
  },
  {
    cmd: "onlyssl",
    notSlashCmd: true,
    keys: ["the content must be served over HTTPS"],
    lines: [
      "Enable SSL on the server you are trying to access. Clearing the config cache might help as well.",
    ],
  },
  {
    cmd: "versions",
    description: "Gives a list of all the supported OS's",
    keys: [
      "does it work on ubuntu",
      "does it work on debian",
      "does it work on centos",
      "does it work with apache",
      "does it work with ubuntu",
      "does it work with debian",
      "does it work with centos",
    ],
    lines: [
      "The installation script supports the NGINX webserver and these operating systems:",
      "Ubuntu: 18.04, 20.04, 22.04.",
      "Debian: 9, 10 11.",
      "CentOS: 7, 8.",
    ],
  },
  {
    cmd: "update",
    description: "Gives an explanation on how to update the panel",
    keys: [
      "is there a way to update the",
      "how do I update",
      "how to update",
      "is there an updater",
      "is there an update script",
    ],
    lines: [
      "To update wings or the panel, please follow these instructions:",
      "For the panel: [Panel Updating](https://pterodactyl.io/panel/1.0/updating.html)",
      "For wings: [Wings Updating](https://pterodactyl.io/wings/1.0/upgrading.html)",
    ],
  },
];
